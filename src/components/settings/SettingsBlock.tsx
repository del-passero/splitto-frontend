// src/components/settings/SettingsBlock.tsx

import SettingItem from "./SettingItem";
import LanguageModal from "./LanguageModal";
import ThemeModal from "./ThemeModal";
import { useThemeLang } from "../../contexts/ThemeLangContext";
import { t } from "../../locales/locale";
import { useState } from "react";

/**
 * –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: —è–∑—ã–∫, —Ç–µ–º–∞, –≤–∞–ª—é—Ç–∞ (–≤–∞–ª—é—Ç–∞ ‚Äî –∑–∞–≥–ª—É—à–∫–∞)
 */
export default function SettingsBlock() {
  const { lang, setLang, theme, setTheme } = useThemeLang();
  const [langOpen, setLangOpen] = useState(false);
  const [themeOpen, setThemeOpen] = useState(false);

  return (
    <>
      <SettingItem
        icon="üåê"
        label={t("settings.language", lang)}
        value={lang === "ru" ? "–†—É—Å—Å–∫–∏–π" : lang === "en" ? "English" : "Espa√±ol"}
        onClick={() => setLangOpen(true)}
      />
      <SettingItem
        icon="üåì"
        label={t("settings.theme", lang)}
        value={theme === "light" ? t("settings.light", lang) : t("settings.dark", lang)}
        onClick={() => setThemeOpen(true)}
      />
      {/* –í–∞–ª—é—Ç–∞ (–∑–∞–≥–ª—É—à–∫–∞) */}
      <SettingItem
        icon="üí∏"
        label={t("settings.currency", lang)}
        value="RUB"
        onClick={() => alert("–°–∫–æ—Ä–æ!")}
      />

      <LanguageModal open={langOpen} onClose={() => setLangOpen(false)} value={lang} onChange={setLang} />
      <ThemeModal open={themeOpen} onClose={() => setThemeOpen(false)} value={theme} onChange={setTheme} />
    </>
  );
}
